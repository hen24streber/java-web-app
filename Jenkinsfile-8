 pipeline {
  agent {
    # label 'linux'
  }
  environment {
    IMAGE_NAME='nginx'
    IMAGE_VERSION='1.20-bullseye'
    TRIVY_VERSION='0.51.2'
  }
  stages {
    stage('Trivy scan for image misconfiguration show MEDIUM,HIGH,CRITICAL') {
      steps {
        script {
          sh("docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy:$TRIVY_VERSION --quiet image --no-progress --exit-code 0 --scanners misconfig,secret --image-config-scanners misconfig,secret --severity MEDIUM,HIGH,CRITICAL $IMAGE_NAME:$IMAGE_VERSION")
        }
      }
    }
    stage('Trivy scan for image vulnerabilities and show HIGH,CRITICAL') {
      steps {
        script {
          sh("docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy:$TRIVY_VERSION --quiet image --no-progress --exit-code 0 --scanners vuln --severity HIGH,CRITICAL $IMAGE_NAME:$IMAGE_VERSION")
        }
      }
    }
  }
}
